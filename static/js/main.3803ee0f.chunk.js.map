{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","userId","classNames","TodoList","todos","map","getUserById","usersFromServer","find","todosWithUsers","App","useState","setTitle","currentUserId","setCurrentUserId","visibleTodos","setVisibleTodos","isTitleEmpty","setIsTitleEmpty","isUserSelected","setIsUserSelected","action","method","onSubmit","event","preventDefault","trimedTitle","trim","newTodoId","todosId","el","Math","max","getNewTodoId","prevVisibleTodos","newTodo","type","placeholder","value","onChange","target","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3803ee0f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../Types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n    user,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={userId}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user\n        && <UserInfo key={user.id} user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { ChangeEvent, FormEvent, useState } from 'react';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { User } from './Types/User';\nimport { Todo } from './Types/Todo';\n\nconst getUserById = (id: number): User | null => {\n  const foundedUser = usersFromServer.find(user => user.id === id);\n\n  return foundedUser || null;\n};\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nconst getNewTodoId = (visibleTodos: Todo[]) => {\n  const todosId = [...visibleTodos].map(el => el.id);\n\n  return Math.max(...todosId);\n};\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [currentUserId, setCurrentUserId] = useState(0);\n\n  const [visibleTodos, setVisibleTodos] = useState(todosWithUsers);\n\n  const [isTitleEmpty, setIsTitleEmpty] = useState(false);\n  const [isUserSelected, setIsUserSelected] = useState(false);\n\n  const handleTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleEmpty(false);\n  };\n\n  const handleUser = (event: ChangeEvent<HTMLSelectElement>) => {\n    setCurrentUserId(+event.target.value);\n    setIsUserSelected(false);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    const trimedTitle = title.trim();\n\n    if (!currentUserId) {\n      setIsUserSelected(true);\n    }\n\n    if (!trimedTitle) {\n      setIsTitleEmpty(true);\n    }\n\n    if (trimedTitle && currentUserId) {\n      const newTodoId = getNewTodoId(visibleTodos);\n      const user = getUserById(currentUserId);\n\n      setVisibleTodos((prevVisibleTodos) => {\n        const newTodo = {\n          id: newTodoId + 1,\n          title,\n          userId: currentUserId,\n          completed: false,\n          user,\n        };\n\n        return [...prevVisibleTodos, newTodo];\n      });\n\n      setTitle('');\n      setCurrentUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n\n          {isTitleEmpty && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={currentUserId}\n            onChange={handleUser}\n          >\n            <option value={0} disabled>Choose a user</option>\n\n            {usersFromServer.map(userFromServer => {\n              const { name, id } = userFromServer;\n\n              return (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n\n          {isUserSelected && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}